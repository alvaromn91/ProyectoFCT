CREATE DATABASE IF NOT EXISTS SCHOOLERZZ;
USE SCHOOLERZZ;

CREATE TABLE IF NOT EXISTS SKINS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(25) NOT NULL,
    DESCRIPCION TEXT,
    RUTA TEXT NOT NULL,
    TIPO INT NOT NULL, -- TODOS = 0, ESTUDIANTES = 1, MAESTROS = 2
    DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS EMBLEMAS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(25) NOT NULL,
    DESCRIPCION TEXT,
    DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS ESTUDIANTES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR(50) NOT NULL,
	APELLIDO_1 VARCHAR(100) NOT NULL,	
	APELLIDO_2 VARCHAR(100) NOT NULL,
	FECHA_NACIMIENTO DATE NOT NULL,
	NACIONALIDAD VARCHAR(50) NOT NULL,
	PAIS VARCHAR(50) NOT NULL,
	CIUDAD VARCHAR(50) NOT NULL,
	CP VARCHAR(10) NOT NULL,
	DIRECCION VARCHAR(200) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
	NICK VARCHAR(12) DEFAULT NULL,
	CONTRASENA TEXT DEFAULT NULL,
	DATOS_MEDICOS TEXT,
	OBSERVACIONES TEXT,
	RUTA_FOTO TEXT,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS SKINS_ESTUDIANTES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	ID_ESTUDIANTE INT NOT NULL,
	ID_SKIN INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_ESTUDIANTE) REFERENCES ESTUDIANTES(ID),
	FOREIGN KEY (ID_SKIN) REFERENCES SKINS(ID)
);

CREATE TABLE IF NOT EXISTS EMBLEMAS_ESTUDIANTES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	ID_ESTUDIANTE INT NOT NULL,
	ID_EMBLEMA INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_ESTUDIANTE) REFERENCES ESTUDIANTES(ID),
	FOREIGN KEY (ID_EMBLEMA) REFERENCES EMBLEMAS(ID)
);

CREATE TABLE IF NOT EXISTS TUTORES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR(50) NOT NULL,
	APELLIDO_1 VARCHAR(100) NOT NULL,	
	APELLIDO_2 VARCHAR(100) NOT NULL,
	FECHA_NACIMIENTO DATE NOT NULL,
	NACIONALIDAD VARCHAR(50) NOT NULL,
	PAIS VARCHAR(50) NOT NULL,
	CIUDAD VARCHAR(50) NOT NULL,
	CP VARCHAR(10) NOT NULL,
	DIRECCION VARCHAR(200) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
	NICK VARCHAR(12) DEFAULT NULL,
	CONTRASENA TEXT DEFAULT NULL,
	TELEFONO_1 VARCHAR(15),
	TELEFONO_2 VARCHAR(15),
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS TUTORES_ESTUDIANTES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	ID_ESTUDIANTE INT NOT NULL,
	ID_TUTOR INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_ESTUDIANTE) REFERENCES ESTUDIANTES(ID),
	FOREIGN KEY (ID_TUTOR) REFERENCES TUTORES(ID)
);

CREATE TABLE IF NOT EXISTS COLEGIOS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR(50) NOT NULL,
	CODIGO_COLEGIO INT NOT NULL,
	LETRAS_3 VARCHAR(3) NOT NULL,
	PAIS VARCHAR(50) NOT NULL,
	CIUDAD VARCHAR(50) NOT NULL,
	CP VARCHAR(10) NOT NULL,
	DIRECCION VARCHAR(200) NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL
);


CREATE TABLE IF NOT EXISTS MANAGER_COLEGIO(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR(50) NOT NULL,
	APELLIDO_1 VARCHAR(100) NOT NULL,	
	APELLIDO_2 VARCHAR(100) NOT NULL,
	FECHA_NACIMIENTO DATE NOT NULL,
	NACIONALIDAD VARCHAR(50) NOT NULL,
	PAIS VARCHAR(50) NOT NULL,
	CIUDAD VARCHAR(50) NOT NULL,
	CP VARCHAR(10) NOT NULL,
	DIRECCION VARCHAR(200) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
	NICK VARCHAR(12) DEFAULT NULL,
	CONTRASENA TEXT DEFAULT NULL,
	TELEFONO_1 VARCHAR(15),
	TELEFONO_2 VARCHAR(15),
	ID_COLEGIO INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_COLEGIO) REFERENCES COLEGIOS(ID)
);

CREATE TABLE IF NOT EXISTS LICENCIAS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	LICENCIA VARCHAR(29) NOT NULL,
	CANTIDAD INT NOT NULL,
	ID_COLEGIO INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_COLEGIO) REFERENCES COLEGIOS(ID)
);

CREATE TABLE IF NOT EXISTS DOCENTES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR(50) NOT NULL,
	APELLIDO_1 VARCHAR(100) NOT NULL,	
	APELLIDO_2 VARCHAR(100) NOT NULL,
	FECHA_NACIMIENTO DATE NOT NULL,
	NACIONALIDAD VARCHAR(50) NOT NULL,
	PAIS VARCHAR(50) NOT NULL,
	CIUDAD VARCHAR(50) NOT NULL,
	CP VARCHAR(10) NOT NULL,
	DIRECCION VARCHAR(200) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
	NICK VARCHAR(12) DEFAULT NULL,
	CONTRASENA TEXT DEFAULT NULL,
	TELEFONO_1 VARCHAR(15),
	TELEFONO_2 VARCHAR(15),
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS SKINS_DOCENTES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	ID_DOCENTE INT NOT NULL,
	ID_SKIN INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_DOCENTE) REFERENCES DOCENTES(ID),
	FOREIGN KEY (ID_SKIN) REFERENCES SKINS(ID)
);

CREATE TABLE IF NOT EXISTS HILOS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	TITULO VARCHAR(200) NOT NULL,
	FECHA_CREACION DATETIME DEFAULT NOW(),
	ID_DOCENTE INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_DOCENTE) REFERENCES DOCENTES(ID)
);

CREATE TABLE IF NOT EXISTS POSTS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	TITULO VARCHAR(200) NOT NULL,
	FECHA_CREACION DATETIME DEFAULT NOW(),
	BODY TEXT NOT NULL,
	EDITADO BOOLEAN DEFAULT 0,
	FECHA_EDICION DATETIME,
	ID_DOCENTE INT NOT NULL,
	ID_HILO INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_DOCENTE) REFERENCES DOCENTES(ID),
	FOREIGN KEY (ID_HILO) REFERENCES HILOS(ID)
);

CREATE TABLE IF NOT EXISTS GRUPOS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	CICLO VARCHAR(12) NOT NULL CHECK (CICLO IN('INFANTIL','PRIMARIA', 'SECUNDARIA', 'BACHILLERATO')),
	CURSO TINYINT NOT NULL,
	CLASE VARCHAR(10) NOT NULL,
	ID_COLEGIO INT NOT NULL,
	ID_DOCENTE INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_COLEGIO) REFERENCES COLEGIOS(ID),
	FOREIGN KEY (ID_DOCENTE) REFERENCES DOCENTES(ID)
);

CREATE TABLE IF NOT EXISTS ACTIVIDADES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	TITULO VARCHAR(25) NOT NULL,
	FECHA_FIN DATETIME DEFAULT NOW(),
	FECHA_CREACION DATETIME DEFAULT NOW(),
	FECHA_ACTUALIZACION DATETIME DEFAULT NULL,
	RUTA TEXT NOT NULL,
	CONTENIDO TEXT  NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS ACTIVIDADES_GRUPOS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	ID_ACTIVIDAD INT NOT NULL,
	ID_GRUPO INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_ACTIVIDAD) REFERENCES ACTIVIDADES(ID),
	FOREIGN KEY (ID_GRUPO) REFERENCES GRUPOS(ID)
);

CREATE TABLE IF NOT EXISTS CHATS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR(25) NOT NULL,
	RUTA_IMAGEN TEXT,
	ID_GRUPO INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_GRUPO) REFERENCES GRUPOS(ID)
);

CREATE TABLE IF NOT EXISTS MENSAJES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	BODY TEXT NOT NULL,
	FECHA_ENVIO DATETIME DEFAULT NOW(),
	ID_CHAT INT NOT NULL,
	DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_CHAT) REFERENCES CHATS(ID)
);

CREATE TABLE IF NOT EXISTS ASIGNATURAS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR(30) NOT NULL,
    DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS GRUPOS_ESTUDIANTES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
	NOMBRE VARCHAR(30) NOT NULL,
	NOTAS_TRIMESTRE_1 INT DEFAULT 0,
	NOTAS_TRIMESTRE_2 INT DEFAULT 0,
	NOTAS_TRIMESTRE_3 INT DEFAULT 0,
	NOTAS_FINAL INT DEFAULT 0,
	FALTAS_ASISTENCIA_1 INT DEFAULT 0,
	FALTAS_ASISTENCIA_2 INT DEFAULT 0,
	FALTAS_ASISTENCIA_3 INT DEFAULT 0,
	FALTAS_ASISTENCIA_FINAL INT DEFAULT 0,
	FALTAS_JUSTIFICADAS_1 INT DEFAULT 0,
	FALTAS_JUSTIFICADAS_2 INT DEFAULT 0,
	FALTAS_JUSTIFICADAS_3 INT DEFAULT 0,
	FALTAS_JUSTIFICADAS_FINAL INT DEFAULT 0,
	RETRASOS_1 INT DEFAULT 0,
	RETRASOS_2 INT DEFAULT 0,
	RETRASOS_3 INT DEFAULT 0,
	RETRASOS_FINAL INT DEFAULT 0,
	ID_GRUPO INT NOT NULL,
	ID_ESTUDIANTE INT NOT NULL,
	ID_ASIGNATURA INT NOT NULL,
    DELETED BOOLEAN DEFAULT 0,
    F_BORRADO TIMESTAMP DEFAULT NULL,
	FOREIGN KEY (ID_GRUPO) REFERENCES GRUPOS(ID),
	FOREIGN KEY (ID_ESTUDIANTE) REFERENCES ESTUDIANTES(ID),
	FOREIGN KEY (ID_ASIGNATURA) REFERENCES ASIGNATURAS(ID)
);